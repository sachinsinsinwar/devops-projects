pipeline {
  agent any
  options { timestamps() }

  environment {
    IMAGE = 'sachinsingh20/demo-api'            // your Docker Hub repo
    TAG   = "dev-${env.BUILD_NUMBER}"
  }

  stages {
    stage('Checkout') {
      steps { checkout scm }
    }

    // NEW: run tests inside a Python container (no Python needed on Jenkins)
    stage('Test') {
      steps {
        dir('apps/demo_api') {
          sh '''
            docker run --rm \
              -v "$PWD":/app \
              -w /app \
              python:3.11-slim /bin/sh -lc "
                python --version &&
                pip install --no-cache-dir -r requirements.txt &&
                pytest -q
              "
          '''
        }
      }
    }

    stage('Build image') {
      steps {
        sh '''
          docker build -t $IMAGE:$TAG -f apps/demo_api/Dockerfile .
          docker tag $IMAGE:$TAG $IMAGE:dev-latest
        '''
      }
    }

    stage('Push image') {
      steps {
        withCredentials([usernamePassword(
          credentialsId: 'dockerhub',
          usernameVariable: 'DOCKER_USER',
          passwordVariable: 'DOCKER_PASS'
        )]) {
          sh '''
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push $IMAGE:$TAG
            docker push $IMAGE:dev-latest
            docker logout || true
          '''
        }
      }
    }
  }

  post {
    always { sh 'docker system prune -f || true' }
  }
}
