pipeline {
  agent any
  options { timestamps(); disableConcurrentBuilds() }

  environment {
    IMAGE = 'sachinsingh20/demo-api'          // your Docker Hub repo
    TAG   = "dev-${env.BUILD_NUMBER}"         // per-build dev tag
  }

  stages {

    stage('Sanity') {
      steps { sh 'echo JENKINSFILE v3 - testing inside image (no bind mounts), context=apps/demo_api' }
    }

    stage('Test in image') {
      steps {
        sh '''
          set -euxo pipefail
          # Build a test image from your app directory as the build context
          docker build -t demo-api:test -f apps/demo_api/Dockerfile apps/demo_api

          # Run sanity + tests inside the image (no host mounts)
          docker run --rm demo-api:test python --version
          docker run --rm demo-api:test pytest -q
        '''
      }
    }

    stage('Build & Tag') {
      steps {
        sh '''
          set -euxo pipefail
          # Build the final image (same context & Dockerfile)
          docker build -t ${IMAGE}:${TAG} -f apps/demo_api/Dockerfile apps/demo_api
          docker tag ${IMAGE}:${TAG} ${IMAGE}:dev-latest
        '''
      }
    }

    stage('Push') {
      steps {
        withCredentials([usernamePassword(
          credentialsId: 'dockerhub',
          usernameVariable: 'DOCKER_USER',
          passwordVariable: 'DOCKER_PASS'
        )]) {
          sh '''
            set -euxo pipefail
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push ${IMAGE}:${TAG}
            docker push ${IMAGE}:dev-latest
            docker logout || true
          '''
        }
      }
    }
  }

  post {
    always {
      sh 'docker system prune -f || true'
      cleanWs()
    }
  }
}
